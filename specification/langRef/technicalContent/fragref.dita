<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN"
 "reference.dtd">
<reference id="fragref" xml:lang="en-us">
  <title><xmlelement>fragref</xmlelement></title>
  <shortdesc>The <xmlelement>fragref</xmlelement> element provides a logical reference to a
      <xmlelement>fragment</xmlelement> element within a syntax diagram, so that you can reference a
    syntax fragment multiple times or pull a large section of syntax out of line for easier reading.</shortdesc>
  <prolog>
    <metadata>
      <keywords>
        <indexterm>syntax diagram
          domain<indexterm><xmlelement>fragref</xmlelement></indexterm></indexterm>
        <indexterm>syntax diagrams<indexterm>fragment references</indexterm></indexterm>
      </keywords>
    </metadata>
  </prolog>
  <refbody>
<section id="specialization-hierarchy">
<title>Specialization hierarchy</title>
<p>The <xmlelement>fragref</xmlelement> element is specialized from <xmlelement>xref</xmlelement>.
        It is defined in the syntax diagram domain module, which is a specialization of the
        programming domain module.</p>
</section>
    <section id="attributes">
      <title>Attributes</title>
      <p>The following attributes are available on this element: <ph
          conkeyref="reuse-attributes/ref-universalatts"/> and <xref
          keyref="attributes-common/attr-href"><xmlatt>href</xmlatt></xref>.</p>
      <p id="attr-exception" outputclass="attr-exception">For this element:<ul id="ul_yvj_42j_spb">
          <li>The <xmlatt>href</xmlatt> attribute is a reference to a syntax diagram
              <xmlelement>fragment</xmlelement>. The referenced <xmlelement>fragment</xmlelement>
            must be in the same diagram as the <xmlelement>fragref</xmlelement> element.</li>
          <li>The <xmlatt>importance</xmlatt> attribute is limited to the values
              <keyword>optional</keyword>, <keyword>required</keyword>, or
              <keyword>-dita-use-conref-target</keyword>.</li>
        </ul></p>
    </section>
    <example id="example" otherprops="examples">
      <title>Example</title><p>In the following code sample, the <xmlelement>fragref</xmlelement>
        element is used to break out a set of related logging options from the larger set of syntax.
        The <xmlelement>fragref</xmlelement> element is part of the program sequence after an input
        file, but the syntax for logging is defined outside of the main
        diagram.</p><codeblock id="codeblock_w5d_t5p_rpb">&lt;syntaxdiagram&gt;
 &lt;title&gt;Syntax for runprogram command&lt;/title&gt;
 &lt;groupseq&gt;
  &lt;kwd&gt;runprogram&lt;/kwd&gt;
  &lt;groupchoice>
    &lt;groupcomp>&lt;oper>-&lt;/oper>&lt;kwd>i&lt;/kwd>&lt;sep>:&lt;/sep>&lt;var>program-name.py&lt;/var>&lt;/groupcomp>
    &lt;groupcomp>&lt;oper>--&lt;/oper>&lt;kwd>input&lt;/kwd>&lt;sep>=&lt;/sep>&lt;var>program-name.py&lt;/var>&lt;/groupcomp>
  &lt;/groupchoice&gt;
  <b>&lt;fragref href="#./logging">Logging options&lt;/fragref></b>
 &lt;/groupseq>
 &lt;fragment id="logging">
   &lt;title>Logging options&lt;/title>
   &lt;groupseq importance="optional">&lt;oper>-&lt;/oper>&lt;kwd>debug&lt;/kwd>&lt;/groupseq>
   &lt;groupseq importance="optional">&lt;oper>-&lt;/oper>&lt;kwd>verbose&lt;/kwd>&lt;/groupseq>
 &lt;/fragment>
&lt;/syntaxdiagram>
</codeblock><ph>might</ph> produce output like the
      following:<pre xml:space="preserve">CopyFile

&gt;&gt;-COPYF--input-filename*INFILE--output-filename--*OUTFILE------&gt;

&gt;--| Overlay |--+-input-filename-+--+-output-filename-+--------&gt;&lt;
                '-*INFILE--------'  '-*OUTFILE--------'

Overlay

|--+-*OVERLAP-+-------------------------------------------------|
   '-*Prompt--'
</pre></example>
  </refbody>
</reference>
