<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="task" xml:lang="en-us">
<title><xmlelement>task</xmlelement></title>
<shortdesc>The <xmlelement>task</xmlelement> element is the top-level element for a task topic.
    Tasks topics provide step-by-step instructions that enable a user to perform a task; they tell
    the user precisely what to do and the order in which to do it.</shortdesc>
<prolog><metadata>
<keywords><indexterm><xmlelement>task</xmlelement></indexterm><indexterm>task elements<indexterm><xmlelement>task</xmlelement></indexterm></indexterm>
</keywords>
</metadata></prolog>
<refbody>
  <section id="usage-information">
      <title>Usage information</title>
      <p>The OASIS DITA Technical Committee distributes two document-type shells for tasks: general
        task and strict task.</p>
      <dl>
        <dlentry>
          <dt>(Strict) task</dt>
          <dd>Maintains a strict order and cardinality for elements within the
              <xmlelement>taskbody</xmlelement> content model. The strict task is implemented with a
            constraint module.</dd>
        </dlentry>
        <dlentry>
          <dt>General task</dt>
          <dd>Relaxes the content model of the original task topic. It allows
              <xmlelement>section</xmlelement> and <xmlelement>steps-informal</xmlelement> inside of
            the task body; it also allows multiple instances and varying order for the elements that
            make up the task body.</dd>
        </dlentry>
      </dl>
    </section>
  <section id="specialization-hierarchy">
   <title>Specialization hierarchy</title>
   <p>The <xmlelement>task</xmlelement> element is specialized from <xmlelement>topic</xmlelement>.
        It is defined in the task module.</p>
  </section>
  <section id="attributes">
   <title>Attributes</title>
   <sectiondiv conkeyref="reuse-attributes/topic-attributes"/>
  </section>
  <example id="example" otherprops="examples">
   <title>Example</title>
      <p>The following code sample illustrates the main building blocks of a strict task topic:</p>
   <codeblock>&lt;task id="Generating-stub-files" xml:lang="en-us">
  &lt;title>Generating stub files&lt;/title>
  &lt;shortdesc>You can use IBM Task Modeler to generate stub files. Stub files are DITA files 
             that contain only a title.&lt;/shortdesc>
  &lt;taskbody>
    &lt;prereq>You must have created a DITA map in IBM Task Modeler.&lt;/prereq>
    &lt;context>As you perform this procedure, you can select the conventions that you want to 
             use for file names.&lt;/context>
    &lt;steps>
      ...
    &lt;/steps>
    &lt;result>In the File Manager view, you can see the file names and paths of the DITA
            topics.&lt;/result>
    &lt;tasktroubleshooting>If you cannot see the file name and paths of the DITA topics, refresh
            the view.&lt;/tasktroubleshooting>
    &lt;example> ... &lt;/example>
    &lt;postreq>You now can create a relationship table to define links between the topics in 
             your DITA map.&lt;/postreq>
  &lt;/taskbody>
&lt;/task></codeblock>
      <p>In a strict task topic, while the child elements of <xmlelement>taskbody</xmlelement> are
        all optional, they can only occur once and must appear in a specific order.</p>
  </example>
</refbody>
</reference>

