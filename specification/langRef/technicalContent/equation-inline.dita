<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference xml:lang="en-us" id="equation-inline">
  <title><xmlelement>equation-inline</xmlelement></title>
  <shortdesc>The <xmlelement>equation-inline</xmlelement> element represents an equation that is
    presented inline within a paragraph or similar context.</shortdesc>
  <prolog>
    <metadata>
      <keywords>
        <indexterm>equation-inline</indexterm>
        <indexterm>equation domain<indexterm>equation-inline</indexterm></indexterm>
      </keywords>
    </metadata>
  </prolog>
  <refbody>
    <section id="usage-information">
      <title>Usage information</title>
      <p>Inline equations are not intended to be numbered.</p>
      <p>When an <xmlelement>equation-inline</xmlelement> element has multiple direct child
        elements, each child represents an alternative form of the equation.</p>
    </section>
      <section id="processing-expectations">
         <title>Processing expectations</title>
      <draft-comment author="robander" time="21 May 2021">Realizing that this same language appears
        in equation block / figure / inline, we should crisp it up and move it to the TC reuse
        file.</draft-comment>
      <draft-comment author="nancylph" time="21 may 2021">
        <p>I'm leaving that piece to you and Kris, since I don't know how you store and track
          reusable pieces of the spec.</p>
      </draft-comment>
      <p>Processors are free to choose the form or forms that they use in deliverables. For example,
        if there is both an image and MathML markup, an HTML-generating processor could generate
        both the image reference and the MathML with appropriate HTML <xmlatt>class</xmlatt> or
          <xmlatt>id</xmlatt> values to enable dynamic rendering based on browser capability.</p>
      </section>    
    <section id="specialization-hierarchy">
      <title>Specialization hierarchy</title>
      <p>The <xmlelement>equation-inline</xmlelement> element is specialized from
          <xmlelement>ph</xmlelement>. It is defined in the equation domain module.</p>
    </section>
    <section id="attributes">
      <title>Attributes</title>
      <p conkeyref="reuse-attributes/universal-keyref"/>
    </section>
    <example id="example" otherprops="examples">
      <title>Example</title>
      <p>The following example contains a paragraph that contains an
          <xmlelement>equation-inline</xmlelement> element with MathML markup:</p>
      <codeblock>&lt;p>MathML inline: <b>&lt;equation-inline></b>
  <b>&lt;mathml></b>
   <b>&lt;m:math display='inline'></b>
    &lt;m:semantics>
     &lt;m:mrow>
      &lt;m:msqrt>
       &lt;m:mrow>
        &lt;m:msup>&lt;m:mi>a&lt;/m:mi>&lt;m:mn>2&lt;/m:mn>&lt;/m:msup>
        &lt;m:mo>+&lt;/m:mo>
        &lt;m:msup>&lt;m:mi>b&lt;/m:mi>&lt;m:mn>2&lt;/m:mn>&lt;/m:msup>
       &lt;/m:mrow>
      &lt;/m:msqrt>        
     &lt;/m:mrow>
    &lt;/m:semantics>
   <b>&lt;/m:math></b>
  <b>&lt;/mathml></b>
 <b>&lt;/equation-inline></b>&lt;/p></codeblock>
      <p>The following example contains an <xmlelement>equation-inline</xmlelement> element that
        uses an image as its content:</p>
      <codeblock>&lt;p>An inline equation that contains an image:
        <b>&lt;equation-inline></b>
        &lt;image keyref="equation-image-01">
        &lt;alt>a squared plus b squared.&lt;/alt>
        &lt;/image>
        <b>&lt;/equation-inline></b>&lt;/p></codeblock>
    </example>
  </refbody>
</reference>
