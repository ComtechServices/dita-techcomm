<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="apiname" xml:lang="en-us">
   <title><xmlelement>apiname</xmlelement></title>
   <shortdesc>The <xmlelement>apiname</xmlelement> element identifies the name of an application
      programming interface (API), such as a Java class name or method name.</shortdesc>
   <prolog>
      <metadata>
         <keywords>
            <indexterm>API<indexterm> names</indexterm></indexterm>
            <indexterm>application programming interface<index-see>API </index-see></indexterm>
            <indexterm>programming<indexterm>API<indexterm>
               names</indexterm></indexterm></indexterm>
            <indexterm>programming
               domain<indexterm><xmlelement>apiname</xmlelement></indexterm></indexterm>
         </keywords>
      </metadata>
   </prolog>
   <refbody>
      <section id="usage-information">
         <title>Usage information</title>
         <p>This element is part of the programming domain.</p>
      </section>
      <section id="specialization-hierarchy"
            ><title>Specialization hierarchy</title>
         <p>The <xmlelement>apiname</xmlelement> is specialized from
               <xmlelement>keyword</xmlelement>. It is defined in the programming domain module.</p>
         <!--<p>+ topic/keyword pr-d/apiname</p>--></section>
      <section id="attributes"><title>Attributes</title>
         <p>The following attributes are available on this element: <xref keyref="attributes-universal"/> and <xref keyref="attributes-keyref"><xmlatt>keyref</xmlatt></xref>.</p>
      </section>
      <example id="example" otherprops="examples"
         ><title>Example</title>
         <p>In the following code sample, the <xmlelement>apiname</xmlelement> element identifies
            the <apiname>document.write</apiname> method.</p><codeblock xml:space="preserve">&lt;p&gt;Use the &lt;apiname&gt;document.write&lt;/apiname&gt; method to create text 
output in the dynamically constructed view.&lt;/p&gt;</codeblock></example>
   </refbody>
</reference>
